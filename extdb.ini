[Default]
Version = 9

Number of Inputs = 0

Sanitize Input Value Check = false
Sanitize Output Value Check = false 

Prepared Statement Cache = true

Return InsertID = false

Strip = true
Strip Chars Action = STRIP
Strip Chars = /\|;{}<>`
Strip Custom Chars = \/\|;{}<>`


; ////////////////
;	SERVER STATS
; ////////////////

[InsertServerStats]
SQL1_1 = INSERT INTO serverStats (roundID, participants, mapname, maparea) VALUES (?, ?, ?, ?);
Number of Inputs = 4
SQL1_INPUTS = 1,2,3,4

[UpdateServerStats]
SQL1_1 = UPDATE serverStats SET roundDuration = ? WHERE roundID = ?;
Number of Inputs = 2
SQL1_INPUTS = 1,2

; ////////////////
;	PROFILE DATA
; ////////////////

[InsertProfileData]
SQL1_1 = INSERT INTO profileData SET pid = ?, pidAlias = MD5(?), nickname = ?, lastSeen = CURRENT_TIMESTAMP ON DUPLICATE KEY UPDATE nickname = ?, lastSeen = CURRENT_TIMESTAMP
Number of Inputs = 2
SQL1_INPUTS = 1,1,2,2

[getProfileData]
SQL1_1 = SELECT banned, banReason, longestHS, longestKill, longestHSWeapon, longestKillWeapon FROM profileData WHERE pid = ?;
Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String, 4-String, 5-String, 6-String

[UpdateProfileData]
SQL1_1 = UPDATE profileData SET playerKills = playerKills + ?, playerDeaths = playerDeaths + ?, playerWins = playerWins + ?, playerScore = playerScore + ?,
SQL1_2 = playerNrOfRounds = playerNrOfRounds + 1, playerHeadshots = playerHeadshots + ?, shotsFired = shotsFired + ?, shotsHit = shotsHit + ?,
SQL1_3 = shotsTaken = shotsTaken + ?, longestHS = ?, longestHSWeapon = ?, longestKill = ?, longestKillWeapon = ?, disconnects = disconnects + ?, suicides = suicides + ?
SQL1_4 = WHERE pid = ?
Number of Inputs = 15
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15

; ////////////////
;	 ROUND STATS
; ////////////////

[UpdateRoundStats]
SQL1_1 = INSERT INTO roundStats (roundID, playerUID, playerKills, playerWin, score, headshots, shotsFired, shotsHit, shotsTaken,
SQL1_2 = died, disconnected, suicide, playerLifeSpan, playerLifeSpanAsIT, beganAsIT, killedByUID, killedByHS, killedByWeapon, killedDistance) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
Number of Inputs = 19
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
















; --------------------------------------------------------------------------------
;	SELECT
; --------------------------------------------------------------------------------

; ---- Get playerUIDs for camera access ----
[getStatusLevel]
SQL1_1 = SELECT pid FROM profileData WHERE statusLevel > ?;
Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-String



; ---- Get loot positions ----
[getLootPos]
SQL1_1 = SELECT houseID, houseType, posX, posY, posZ FROM lootSpawnPos WHERE mapName = ?;
Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String, 4-String, 5-String

; ---- Get loot positions ----
[getLootPosID]
SQL1_1 = SELECT houseID, houseType, posX, posY, posZ FROM lootSpawnPos WHERE houseID = ?;
Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String, 4-String, 5-String

; ---- Get loot table ----
[getLootTable]
SQL1_1 = SELECT item, type, quantity, availability FROM lootTable WHERE type = ?;
Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String, 3-String, 4-String

; ---- Get loot type ratio ----
[getLootTypeRatio]
SQL1_1 = SELECT type, probability FROM lootTypeRatio WHERE id != ?;
Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-String, 2-String

; --------------------------------------------------------------------------------
;	INSERTS - MySQL
; --------------------------------------------------------------------------------

; ---- Write loot pos to DB ----
[writeLootPos]
SQL1_1 = INSERT INTO lootSpawnPos (houseID, houseType, posX, posY, posZ, mapName) VALUES (?, ?, ?, ?, ?, ?);
Number of Inputs = 6
SQL1_INPUTS = 1,2,3,4,5,6

; ---- Add player to unique round ----
[InsertPlayerRound]
SQL1_1 = INSERT INTO roundStats (roundID, playerUID, playerName) VALUES (?, ?, ?);
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Add player to statistics page ----
[InsertPlayerStat]
SQL1_1 = INSERT INTO totalStats SET playerUID = ?, playerName = ?, playerNrOfRounds = 1
SQL1_2 = ON DUPLICATE KEY UPDATE playerNrOfRounds = playerNrOfRounds + 1, playerName = ?

Number of Inputs = 2
SQL1_INPUTS = 1,2,2

; --------------------------------------------------------------------------------
;	UPDATES - ANTI CAMPING
; --------------------------------------------------------------------------------

; ---- Update Anti camp stat ----
[UpdatePlayerStatAntiCamp]
SQL1_1 = UPDATE totalStats SET antiCampWarnings = antiCampWarnings + 1 WHERE playerUID = ?;
Number of Inputs = 1
SQL1_INPUTS = 1

; ---- Update Anti camp round ----
[UpdatePlayerRoundAntiCamp]
SQL1_1 = UPDATE roundStats SET antiCampWarnings = antiCampWarnings + 1 WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 2
SQL1_INPUTS = 1,2

; ---- Update Anti camp stat ----
[UpdatePlayerStatAntiCampDeath]
SQL1_1 = UPDATE totalStats SET antiCampWarnings = antiCampWarnings + 1, shotsFired = shotsFired + ?, shotsTaken = shotsTaken + ? WHERE playerUID = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Update Anti camp round ----
[UpdatePlayerRoundAntiCampDeath]
SQL1_1 = UPDATE roundStats SET antiCampWarnings = antiCampWarnings + 1, playerLifeSpan = ?, playerLifeSpanAsIT = ?, shotsFired = ?, shotsTaken = ? WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 6
SQL1_INPUTS = 1,2,3,4,5,6

; --------------------------------------------------------------------------------
;	UPDATES - PERSONAL STATISTICS
; --------------------------------------------------------------------------------

; ---- Update kills ----
[UpdatePlayerStatKills]
SQL1_1 = UPDATE totalStats SET playerKills = playerKills + 1, headshots = headshots + ? WHERE playerUID = ?;
Number of Inputs = 2
SQL1_INPUTS = 1,2

; ---- Update longest headshot ----
[UpdatePlayerLongestHeadshot]
SQL1_1 = UPDATE totalStats SET playerKills = playerKills + 1, headshots = headshots + ?, playerScore = playerScore + ?, longestHeadshotWeapon = (CASE WHEN ? > longestHeadshot THEN ? ELSE longestHeadshotWeapon END), longestHeadshot = (CASE WHEN ? > longestHeadshot THEN ? ELSE longestHeadshot END) WHERE playerUID = ?;
Number of Inputs = 5
SQL1_INPUTS = 1,2,3,4,3,3,5

; ---- Update shots hit ----
[UpdateTotalStatShotsHit]
SQL1_1 = UPDATE totalStats SET shotsHit = shotsHit + ? WHERE playerUID = ?;
Number of Inputs = 2
SQL1_INPUTS = 1,2

; ---- Update longest kill ----
[UpdatePlayerLongestKill]
SQL1_1 = UPDATE totalStats SET playerKills = playerKills + 1, playerScore = playerScore + ?, longestKillWeapon = (CASE WHEN ? > longestKill THEN ? ELSE longestKillWeapon END), longestKill = (CASE WHEN ? > longestKill THEN ? ELSE longestKill END) WHERE playerUID = ?;
Number of Inputs = 4
SQL1_INPUTS = 1,2,3,2,2,4

; ---- Update player deaths ----
[UpdatePlayerStatDeaths]
SQL1_1 = UPDATE totalStats SET playerDeaths = playerDeaths + 1, shotsFired = shotsFired + ?, shotsTaken = shotsTaken + ? WHERE playerUID = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Update player suicide deaths ----
[UpdatetotalStatsuicideDeath]
SQL1_1 = UPDATE totalStats SET playerDeaths = playerDeaths + 1, shotsFired = shotsFired + ?, shotsTaken = shotsTaken + ? WHERE playerUID = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Update player on draw ----
[UpdatePlayerStatDraw]
SQL1_1 = UPDATE totalStats SET shotsFired = shotsFired + ?, shotsTaken = shotsTaken + ? WHERE playerUID = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Update player wins ----
[UpdatePlayerStatWinScore]
SQL1_1 = UPDATE totalStats SET playerWins = playerWins + 1, shotsFired = shotsFired + ?, shotsTaken = shotsTaken + ?, playerScore = playerScore + ? WHERE playerUID = ?;
Number of Inputs = 4
SQL1_INPUTS = 1,2,3,4

; --------------------------------------------------------------------------------
;	UPDATES - ROUND STATISTICS
; --------------------------------------------------------------------------------

; ---- Update player ----
[UpdatePlayerRoundStat]
SQL1_1 = UPDATE roundStats SET playerKills = playerKills + 1 WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 2
SQL1_INPUTS = 1,2

; ---- Update player score each round ----
[UpdatePlayerRoundStatScore]
SQL1_1 = UPDATE roundStats SET score = score + ? WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Update player set draw ----
[UpdatePlayerRoundStatDraw]
SQL1_1 = UPDATE roundStats SET draw = 1, playerLifeSpan = ?, playerLifeSpanAsIT = ?, shotsFired = ?, shotsTaken = ?  WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 6
SQL1_INPUTS = 1,2,3,4,5,6

; ---- Update shots hit ----
[UpdatePlayerRoundStatShotsHit]
SQL1_1 = UPDATE roundStats SET shotsHit = shotsHit + ? WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3

; ---- Update player round lifespan ----
[UpdatePlayerRoundStatKilled]
SQL1_1 = UPDATE roundStats
SQL1_2 = SET playerLifeSpan = ?, playerLifeSpanAsIT = ?, shotsFired = ?, shotsTaken = ?, kia = 1, killedByUID = ?, killedByHS = ?, killedDistance = ?, killedByWeapon = ?, killerLocationX = ?, killerLocationY = ?, killerLocationZ = ?, playerLocationX = ?, playerLocationY = ?, playerLocationZ = ?
SQL1_3 = WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 16
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16

; ---- Update player round suicide deaths ----
[UpdatePlayerRoundStatSuicideDeath]
SQL1_1 = UPDATE roundStats SET kia = 1, playerLifeSpan = ?, playerLifeSpanAsIT = ?, shotsFired = ?, shotsTaken = ? WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 6
SQL1_INPUTS = 1,2,3,4,5,6

; ---- Update player round suicide deaths ----
[UpdatePlayerRoundStatDisconnected]
SQL1_1 = UPDATE roundStats SET playerLifeSpan = ?, playerLifeSpanAsIT = ?, playerDisconnected = 1 WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 4
SQL1_INPUTS = 1,2,3,4

; ---- Update player round win----
[UpdatePlayerRoundStatWinner]
SQL1_1 = UPDATE roundStats SET playerLifeSpan = ?, playerLifeSpanAsIT = ?, shotsFired = ?, shotsTaken = ?, score = score + ?,  playerWin = 1 WHERE roundID = ? AND playerUID = ?;
Number of Inputs = 7
SQL1_INPUTS = 1,2,3,4,5,6,7

; --------------------------------------------------------------------------------
;	UPDATES - BAN
; --------------------------------------------------------------------------------

; ---- Set banned players ----
[setBanned]
SQL1_1 = UPDATE profileData SET banned = ?, banReason = ? WHERE pid = ?;
Number of Inputs = 3
SQL1_INPUTS = 1,2,3




; -------------------------------- SKIT --------------------------------------

; --------------------------------------------------------------------------------
;	QUERYS - MySQL
; --------------------------------------------------------------------------------

; ---- Log Server statistics ----

;[getPlayerName]
;SQL1_1 = SELECT * FROM totalStats WHERE PlayerUID = ?;

;Number of Inputs = 1
;SQL1_INPUTS = 1
;OUTPUT = 1, 2-String, 3, 4

;; 

;[LeaderboardAddScore]
;SQL1_1 = UPDATE totalStats SET TagName = ?, TagScore = ? WHERE PlayerUID = ?;

;Number of Inputs = 3
;SQL1_INPUTS = 1,2,3

;; 

;[insertOrUpdatePlayerSave]
;SQL1_1 = INSERT INTO totalStats SET PlayerUID = ?, TagName = ?, TagScore = ?
;SQL1_2 = ON DUPLICATE KEY UPDATE TagScore = TagScore + 1;

;Number of Inputs = 3

;SQL1_INPUTS = 1,2,3

; --------------------------------------------------------------------------------
;	Using custom input
; --------------------------------------------------------------------------------

; ---- Update kills for weapon ----
;[UpdatePlayerStatKillWeapon]
;SQL1_1 = UPDATE totalStats
;SQL1_2 = SET $CUSTOM_1$ = $CUSTOM_2$ + 1
;SQL1_3 = WHERE playerUID = ?;
;SQL1_INPUTS = 3, 2, 1
;Number of Inputs = 1
;Number of Custom Inputs = 2


; --- EXAMPLE CUSTOM INPUT FROM WEB ---

;;[updatePlayerSaveValueString]
;;SQL1_1 = UPDATE PlayerSave
;;SQL1_2 =    SET $CUSTOM_1$ = ?
;;SQL1_3 = WHERE PlayerUID = ? AND MapID = ?;
;;SQL1_INPUTS = 3, 1, 2
;;Number of Inputs = 3
;;Number of Custom Inputs = 1

;;$CUSTOM_x$ allows you to insert dynamic text into an prepared statement.
;;Downside is the statement isn't cached + possible less secure. 

;;Note the order of passing inputs to extDB2 is important with custom inputs.
;; Its <inputs>:<custom_inputs>
;; So the inputs would be in this order _playerUID:_mapID:_value:_custom_1 

;;Also you can re-arrange the Input Value Order